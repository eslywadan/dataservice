# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_cust.clientapival_pb2 as clientapival__pb2


class ClientAPIValStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.clientinfo = channel.unary_unary(
                '/clientapival.ClientAPIVal/clientinfo',
                request_serializer=clientapival__pb2.ClientId.SerializeToString,
                response_deserializer=clientapival__pb2.ClientInfo.FromString,
                )
        self.clientapikey = channel.unary_unary(
                '/clientapival.ClientAPIVal/clientapikey',
                request_serializer=clientapival__pb2.ClientCred.SerializeToString,
                response_deserializer=clientapival__pb2.ClientAPIKey.FromString,
                )
        self.verifiedapikey = channel.unary_unary(
                '/clientapival.ClientAPIVal/verifiedapikey',
                request_serializer=clientapival__pb2.APIKey.SerializeToString,
                response_deserializer=clientapival__pb2.VerifiedAPIKey.FromString,
                )


class ClientAPIValServicer(object):
    """Missing associated documentation comment in .proto file."""

    def clientinfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clientapikey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifiedapikey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientAPIValServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'clientinfo': grpc.unary_unary_rpc_method_handler(
                    servicer.clientinfo,
                    request_deserializer=clientapival__pb2.ClientId.FromString,
                    response_serializer=clientapival__pb2.ClientInfo.SerializeToString,
            ),
            'clientapikey': grpc.unary_unary_rpc_method_handler(
                    servicer.clientapikey,
                    request_deserializer=clientapival__pb2.ClientCred.FromString,
                    response_serializer=clientapival__pb2.ClientAPIKey.SerializeToString,
            ),
            'verifiedapikey': grpc.unary_unary_rpc_method_handler(
                    servicer.verifiedapikey,
                    request_deserializer=clientapival__pb2.APIKey.FromString,
                    response_serializer=clientapival__pb2.VerifiedAPIKey.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'clientapival.ClientAPIVal', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientAPIVal(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def clientinfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/clientapival.ClientAPIVal/clientinfo',
            clientapival__pb2.ClientId.SerializeToString,
            clientapival__pb2.ClientInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def clientapikey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/clientapival.ClientAPIVal/clientapikey',
            clientapival__pb2.ClientCred.SerializeToString,
            clientapival__pb2.ClientAPIKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verifiedapikey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/clientapival.ClientAPIVal/verifiedapikey',
            clientapival__pb2.APIKey.SerializeToString,
            clientapival__pb2.VerifiedAPIKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
